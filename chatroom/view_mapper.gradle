import groovy.util.slurpersupport.GPathResult
import groovy.util.slurpersupport.Node

project.afterEvaluate {
    def resParseDebugTask = project.tasks.create("ResParseDebugTask", ResParseTask.class)
    resParseDebugTask.doTask()
}

class ResParseTask extends DefaultTask {
    File viewNameListFile
    boolean isDebug
    HashSet<String> viewSet = new HashSet<>()
    // 自己根据输出几个添加
    List<String> ignoreViewNameList = Arrays.asList("include", "fragment", "merge", "view", "DateTimeView")

    @TaskAction
    void doTask() {
        println("自动编译：" + "开始执行")
        File distDir = project.getProjectDir()
        println("自动编译：" + "创建目录：" + distDir.getPath())
        viewNameListFile = new File(distDir, "chatroom_layout_views.txt")
        if (viewNameListFile.exists()) {
            viewNameListFile.delete()
        }
        viewNameListFile.createNewFile()
        viewSet.clear()
        viewSet.addAll(ignoreViewNameList)
        println("自动编译：" + "创建文件：" + viewNameListFile.getPath() + "  创建成功与否：" + viewNameListFile.exists())

        try {
            File layoutDir = new File(project.getProjectDir(), "src/main/res/layout")
            File[] layoutFiles = layoutDir.listFiles()
            if(layoutFiles == null || layoutFiles.length == 0) {
                return
            }
            for (int i = 0; i < layoutFiles.length; i++) {
                File layoutFile = layoutFiles[i]
                String layoutPath = layoutFile.getPath()
                try {
                    XmlSlurper slurper = new XmlSlurper()
                    GPathResult result = slurper.parse(layoutPath)
                    String viewName = result.name();
                    if (viewSet.add(viewName)) {
                        viewNameListFile.append("${viewName}\n")
                    }
                    if (result.children() != null) {
                        result.childNodes().forEachRemaining({ o ->
                            if (o instanceof Node) {
                                parseLayoutNode(o)
                            }
                        })
                    }
                } catch (Throwable e) {
                    e.printStackTrace()
                }
            }
        } catch (Throwable e) {
            e.printStackTrace()
        }

    }

    void parseLayoutNode(Node node) {
        if (node == null) {
            return
        }
        String viewName = node.name()
        if (viewSet.add(viewName)) {
            viewNameListFile.append("${viewName}\n")
        }
        if (node.childNodes().size() <= 0) {
            return
        }
        node.childNodes().forEachRemaining({ o ->
            if (o instanceof Node) {
                parseLayoutNode(o)
            }
        })
    }
}
